# Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at 
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#
<VirtualHost *:80>
    # default example:

    # ServerAdmin webmaster@dummy-host.example.com
    # DocumentRoot "${SRVROOT}/docs/dummy-host.example.com"
    # ServerName dummy-host.example.com
    # ServerAlias www.dummy-host.example.com
    # ErrorLog "logs/dummy-host.example.com-error.log"
    # CustomLog "logs/dummy-host.example.com-access.log" common

    
    # my attempts of manual customization (didn't check it)

    # ServerName localhost.ru
    # ServerAlias www.localhost.ru
    # ServerAdmin digital-mag@ya.ru
    # # DocumentRoot "${SRVROOT}/docs/django/static/hhparser"
    # DocumentRoot "F:/Python/HH_parser/django/skillproject/relevance_app/static"
    # ErrorLog "logs/django/hhparser/errors.log"
    # CustomLog "logs/django/hhparser/info.log" combined

    ProxyPass /static/ !
    ProxyPass /media/ !
    ProxyPass / http://localhost:8000/    

</VirtualHost>



